name: build

on:
  workflow_call:
    inputs:
      crate:
        required: true
        type: string
      bin:
        required: false
        type: string
      git:
        required: false
        type: string
      ref:
        required: false
        type: string
      path:
        required: false
        type: string
      toolchain:
        required: false
        type: string
        default: stable
      locked:
        required: false
        type: boolean
        default: false
    secrets:
      private_key:
        required: true

jobs:
  build:
    name: ${{inputs.crate}} - ${{matrix.runner}}
    strategy:
      matrix:
        runner: ["ubuntu-latest", "buildjet-4vcpu-ubuntu-2204-arm"]
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: write
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: ${{inputs.git}}
          ref: ${{inputs.ref}}
          path: ${{inputs.crate}}
        if: inputs.git
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{inputs.toolchain}}
      - id: arch
        run: echo "arch=$(arch)" >> $GITHUB_OUTPUT
      - run: cargo install --force ${{inputs.git && format('--path={0}', inputs.path || '.') || inputs.crate}} --bin ${{inputs.bin || inputs.crate}} ${{inputs.locked && '--locked' || ''}}
        working-directory: ${{inputs.git && inputs.crate || '.'}}
      - id: which
        run: echo "which=$(which ${{inputs.bin || inputs.crate}})" >> $GITHUB_OUTPUT
      - id: rename
        run: mv ${{steps.which.outputs.which}} ${{steps.which.outputs.which}}-${{steps.arch.outputs.arch}}
      - id: version
        run: echo "version=$(cargo install --list | grep -o '^${{inputs.crate}} \([^ :]\)\+')" >> $GITHUB_OUTPUT
      - run: echo "$PRIVATE_KEY" | gpg --import
        env:
          PRIVATE_KEY: ${{secrets.private_key}}
      - run: gpg --output ${{inputs.bin || inputs.crate}}-${{steps.arch.outputs.arch}}.sig --detach-sig ${{steps.which.outputs.which}}-${{steps.arch.outputs.arch}}
      - run: gpg --output signing-key-${{steps.arch.outputs.arch}}.gpg --dearmor signing-key.asc
      - run: gpg --no-default-keyring --keyring ./signing-key-${{steps.arch.outputs.arch}}.gpg --verify ${{inputs.bin || inputs.crate}}-${{steps.arch.outputs.arch}}.sig ${{steps.which.outputs.which}}-${{steps.arch.outputs.arch}}
      - run: git tag -d ${{inputs.crate}} || true
      - run: git tag ${{inputs.crate}}
      - run: git push origin tag ${{inputs.crate}} --force
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{inputs.crate}}
          target_commitish: ${{github.ref}}
          files: |
            ${{steps.which.outputs.which}}-${{steps.arch.outputs.arch}}
            ${{inputs.bin || inputs.crate}}-${{steps.arch.outputs.arch}}.sig
          fail_on_unmatched_files: true
          body: ${{steps.version.outputs.version}}
